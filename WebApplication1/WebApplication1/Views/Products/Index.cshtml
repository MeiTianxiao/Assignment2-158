@model WebApplication1.ViewModels.ProductIndexViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<p>
    @(String.IsNullOrWhiteSpace(Model.Search)?"Showing All":"You Searched For "+Model.Search + " found ")
    @Model.Products.TotalItemCount products

</p>


<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All");
        <label>Sort by:</label>
        @Html.DropDownListFor(vm => vm.SortBy,new SelectList(Model.Sorts,"Value","Key"),"Default")
        <input type="Submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<table class="table">

    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>

            @Html.DisplayNameFor(model => model.Products.First().Category.Name)
            
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
    </tr>

    @foreach (var item in Model.Products)
    {
        <tr>

            <td>
                @Html.DisplayFor(model => item.Name)
            </td>
            <td>
                @Html.DisplayFor(model => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(model => item.Price)
            </td>
            <td>
                @Html.DisplayFor(model => item.Description)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
</table>


<div>
    Page @(Model.Products.PageCount<Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
    @Html.PagedListPager(Model.Products, page => Url.Action("Index", new { category = Model.Category, Search = Model.Search,sortBy=Model.SortBy, page }))

</div>
